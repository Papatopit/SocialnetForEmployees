stages:
  - winbuild
  - linbuild
  - deploy

.check-on:
  image: maven:latest
  services:
    - postgres:latest
  variables:
    MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
    MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"
    POSTGRES_USER: $postgres_user
    POSTGRES_PASSWORD: $postgres_password
    POSTGRES_DB: $postgres_db
    POSTGRES_HOST_AUTH_METHOD: trust
  cache:
    paths:
      - .m2/repository
  script:
    - 'mvn $MAVEN_CLI_OPTS clean install'
    - echo "$CI_JOB_STAGE was successful"
    - echo "build number $CI_PIPELINE_ID"
  artifacts:
    paths:
      - core/target/core-1.0-SNAPSHOT.jar
      - db/target/db-1.0-SNAPSHOT.jar
job 1:
  variables:
    TESTCONTAINERS_HOST_OVERRIDE: "host.docker.internal"
  extends: .check-on
  stage: winbuild
  allow_failure: true
job 2:
  variables:
    TESTCONTAINERS_HOST_OVERRIDE: "172.17.0.1"
  extends: .check-on
  stage: linbuild
  when: on_failure

Deploy:
  image: docker:latest
  stage: deploy
  script:
    - docker login -u $docker_user -p $docker_password
    - docker build -f dockerfile-core -t $repository-core:latest .
    - docker push $repository-core
    - docker build -f dockerfile-db -t $repository-db:latest .
    - docker push $repository-db:latest
  only:
    - master